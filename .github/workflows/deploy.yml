name: Deploy Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: j9p6g6v0/lambda-playwright-python
  IMAGE_TAG: 0.1.${{ github.run_number }}

# permissions required for release and assuming the role
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: write   # This is required for actions/checkout/releases

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: deployrolesession
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64'
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          platforms: linux/arm64
            
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Amazon ECR Public
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          public: true

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/lambda-playwright-python:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/lambda-playwright-python:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/lambda-playwright-python:v${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push to Amazon ECR Public
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            public.ecr.aws/${{ env.ECR_REPOSITORY }}:latest
            public.ecr.aws/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
            public.ecr.aws/${{ env.ECR_REPOSITORY }}:v${{ env.IMAGE_TAG }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ env.IMAGE_TAG }}
          name: Release v${{ env.IMAGE_TAG }}
          body: ${{ github.event.head_commit.message }}          